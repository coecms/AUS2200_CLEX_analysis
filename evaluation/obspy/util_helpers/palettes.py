import matplotlib.colors as col
import matplotlib.pyplot as pyplt
import iris
import iris.plot as iplot   # load Brewer palettes
import matplotlib.cm as mpl_cm

def hsl_to_rgb(H, S, L):
    if L < 0.5:
        q = L * (1 + S)
    elif L >= 0.5:
        q = L + S - (L * S)
    p = 2 * L - q
    hk = H / 360.0
    tR = hk + 0.333333
    tG = hk
    tB = hk - 0.333333

    def color(t):
        if t < 0:
            t += 1
        if t > 1:
            t -= 1
        if t < 0.166666:
            c = p + ((q - p) * 6 * t)
        elif 0.166666 <= t < 0.5:
            c = q
        elif 0.5 <= t < 0.666667:
            c = p + ((q - p) * 6 * (0.666667 - t))
        else:
            c = p
        return c

    R = color(tR)
    G = color(tG)
    B = color(tB)
    return R, G, B


# Intialise colormap to linear black and white
#    . blue at the lower end (below 0.3 = -10 since normalize to [-25,25] )
#    . black to white for [-10, 10]
#    . red  at the upper end (above 0.7 = -10 since normalize to [-25,25]

BlueGreyRed = {'red':   ((0.0,  0.0, 0.0),
                         (0.10, 0.0, 0.0),
                         (0.2,  0.5, 0.0),
                         (0.8,  1.0, 0.5),
                         (0.90, 1.0, 1.0),
                         (1.0,  1.0, 1.0)),
               'green': ((0.0,  0.0, 0.0),
                         (0.10, 0.0, 0.0),
                         (0.2,  0.5, 0.0),
                         (0.8,  1.0, 0.5),
                         (0.90, 0.0, 0.0),
                         (1.0,  0.0, 0.0)),
               'blue':  ((0.0,  1.0, 1.0),
                         (0.10, 1.0, 1.0),
                         (0.2,  0.5, 0.0),
                         (0.8,  1.0, 0.5),
                         (0.90, 0.0, 0.0),
                         (1.0,  0.0, 0.0)) }

# Intervals are in m/day
# equivalent to mm/day of:  0, 1, 5, 10, 15, 25, 50, 100, 150, 200,
#                           300, 400, 1000=infinity
# 
NMOC_rain =    {'red': 
                        ((0.000,  1.00, 1.00),
                         (0.001,  1.00, 1.00),
                         (0.005,  1.00, 0.86),
                         (0.010,  0.86, 0.59),
                         (0.015,  0.59, 0.39),
                         (0.025,  0.39, 0.00),
                         (0.050,  0.00, 0.00),
                         (0.100,  0.00, 0.59),
                         (0.150,  0.59, 0.86),
                         (0.200,  0.86, 0.86),
                         (0.300,  0.86, 0.86),
                         (0.400,  1.00, 1.00),
                         (1.000,  1.00, 1.00)),
               'green': ((0.000,  1.00, 1.00),
                         (0.001,  1.00, 0.92),
                         (0.005,  0.92, 1.00),
                         (0.010,  1.00, 1.00),
                         (0.015,  1.00, 1.00),
                         (0.025,  1.00, 0.78),
                         (0.050,  0.78, 0.39),
                         (0.100,  0.39, 0.39),
                         (0.150,  0.39, 0.39),
                         (0.200,  0.39, 0.39),
                         (0.300,  0.39, 0.00),
                         (0.400,  0.00, 0.30),
                         (1.000,  0.30, 0.30)),
               'blue':  ((0.000,  1.00, 1.00),
                         (0.001,  1.00, 0.75),
                         (0.005,  0.75, 0.78),
                         (0.010,  0.78, 0.59),
                         (0.015,  0.59, 1.00),
                         (0.025,  1.00, 1.00),
                         (0.050,  1.00, 1.00),
                         (0.100,  1.00, 1.00),
                         (0.150,  1.00, 1.00),
                         (0.200,  1.00, 1.00),
                         (0.300,  1.00, 1.00),
                         (0.400,  1.00, 0.60),
                         (1.000,  0.60, 0.60)) }

# NCC RGB colours
#                 0 1.00  1.00  1.00  
#                 1 0.00  0.00  0.00  
#                 2 1.00  0.30  0.61  
#                 3 1.00  0.00  1.00  
#                 4 0.70  0.00  1.00
#                 5 0.25  0.25  1.00
#                 6 0.00  0.65  1.00
#                 7 0.00  0.90  0.60
#                 8 0.30  1.00  0.00
#                 9 0.70  1.00  0.00
#                 10 1.00  1.00  0.00
#                 11 0.92  0.87  0.16
#                 12 1.00  0.75  0.35
#                 13 1.00  0.68  0.00
#                 14 1.00  0.40  0.00
#                 15 0.93  0.32  0.00
#                 16 0.88  0.24  0.00
#                 17 1.00  0.00  0.00
#                 18 0.93  0.00  0.05
#                 19 0.79  0.00  0.08
#                 20 0.75  0.29  0.29
#                 21 1.00  0.95  0.90
#
# rain palette (lowest -> highest) : 0 12 13 10 9 8 7 6 5 4 3 2 

#                 0 1.00  1.00  1.00  
#                 12 1.00  0.75  0.35
#                 13 1.00  0.68  0.00
#                 10 1.00  1.00  0.00
#                 9 0.70  1.00  0.00
#                 8 0.30  1.00  0.00
#                 7 0.00  0.90  0.60
#                 6 0.00  0.65  1.00
#                 5 0.25  0.25  1.00
#                 4 0.70  0.00  1.00
#                 3 1.00  0.00  1.00  
#                 2 1.00  0.30  0.61  

NCC_rain_lsc = {'red': 
                        ((0.000,  1.00, 1.00), #  0
                         (0.001,  1.00, 1.00), #  0,12
                         (0.005,  1.00, 1.00), # 12,13
                         (0.010,  1.00, 1.00), # 13,10
                         (0.015,  1.00, 0.70), # 10,9
                         (0.025,  0.70, 0.30), #  9,8
                         (0.050,  0.30, 0.00), #  8,7
                         (0.100,  0.00, 0.00), #  7,6
                         (0.150,  0.00, 0.25), #  6,5
                         (0.200,  0.25, 0.70), #  5,4
                         (0.300,  0.70, 1.00), #  4,3
                         (0.400,  1.00, 1.00), #  3,2
                         (1.000,  1.00, 1.00)), # 2
                'green': 
                        ((0.000,  1.00, 1.00), #  0
                         (0.001,  1.00, 0.75), #  0,12
                         (0.005,  0.75, 0.68), # 12,13
                         (0.010,  0.68, 1.00), # 13,10
                         (0.015,  1.00, 1.00), # 10,9
                         (0.025,  1.00, 1.00), #  9,8
                         (0.050,  1.00, 0.90), #  8,7
                         (0.100,  0.90, 0.65), #  7,6
                         (0.150,  0.65, 0.25), #  6,5
                         (0.200,  0.25, 0.00), #  5,4
                         (0.300,  0.00, 0.00), #  4,3
                         (0.400,  0.00, 0.30), #  3,2
                         (1.000,  0.30, 0.30)), # 2
                'blue': 
                        ((0.000,  1.00, 1.00), #  0
                         (0.001,  1.00, 0.35), #  0,12
                         (0.005,  0.35, 0.00), # 12,13
                         (0.010,  0.00, 0.00), # 13,10
                         (0.015,  0.00, 0.00), # 10,9
                         (0.025,  0.00, 0.00), #  9,8
                         (0.050,  0.00, 0.60), #  8,7
                         (0.100,  0.60, 1.00), #  7,6
                         (0.150,  1.00, 1.00), #  6,5
                         (0.200,  1.00, 1.00), #  5,4
                         (0.300,  1.00, 1.00), #  4,3
                         (0.400,  1.00, 0.61), #  3,2
                         (1.000,  0.61, 0.61)) } # 2

step = { 'conLvls' : [-1.e10, 1.0, 1.e10] ,
         'colours' : ['white','Red'] }

NCCljr_rain = { 'conLvls' : [-2, -0.0001,1,5,10,15,25,50,100,150,200,300,400,1000] ,
                'colours' : ['lightgrey','white','wheat','orange','yellow','yellowgreen',
                             'green','darkcyan','royalblue','darkslateblue',
                             'purple','MediumVioletRed','orchid'] }

ECMWF_rain0 = { 'conLvls' : [-2, -0.0001,1 , 2, 5, 10, 20, 50, 100, 150, 200, 1000] ,
               'colours' : ['lightgrey','white','LightCyan','LightGreen','LightBlue','DodgerBlue','Blue','Indigo','Magenta','FireBrick','white'] }
 
MO_rain = { 'conLvls' : [-2, -0.0001, 0.125, 0.25, 0.5, 1.0, 2.0, 4.0, 8.0, 16.0, 32.0, 1000.], 
            'colours' : ['LightGrey','White', 'LightCyan', 'Cyan', 'DodgerBlue',
                         'Chartreuse', 'Yellow','Orange', 'OrangeRed','DeepPink', 
                         'DarkMagenta' ] }

MO_rain64 = { 'conLvls' : [-2, -0.0001, 0.25, 0.5, 1.0, 2.0, 4.0, 8.0, 16.0, 32.0, 64.0, 1000.], 
            'colours' : ['LightGrey','White', 'LightCyan', 'Cyan', 'DodgerBlue',
                         'Chartreuse', 'Yellow','Orange', 'OrangeRed','DeepPink', 
                         'DarkMagenta' ] }

ECMWF_rain = { 'conLvls' : [0.001, 0.2, 1 , 2, 5, 10, 20, 50, 100, 150, 200] ,
               'colours' : [(1., 1., 1.), 
                            (0.863,0.85,0.784),
                            (0.863,1.0,0.784),
                            (0.588,1.0,0.588),
                            (0.392,1.0,1.0),
                            (0.0,0.784,1.0),
                            (0.0,0.392,1.0),
                            (0.588,0.392,1.0),
                            (0.863,0.392,1.0),
                            (1.0,0.0,1.0) ]}


NCC_rain = { 'conLvls' : [-2, -0.001,1,5,10,15,25,50,100,150,200,300,400,1000] ,
                'colours' : [ ( 0.85, 0.85, 0.85 ),
		              ( 1.00, 1.00, 1.00 ),
                              ( 1.00, 0.75, 0.35 ),
                              ( 1.00, 0.68, 0.00 ),
                              ( 1.00, 1.00, 0.00 ),
                              ( 0.70, 1.00, 0.00 ),
                              ( 0.30, 1.00, 0.00 ),
                              ( 0.00, 0.90, 0.60 ),
                              ( 0.00, 0.65, 1.00 ),
                              ( 0.25, 0.25, 1.00 ),
                              ( 0.70, 0.00, 1.00 ),
                              ( 1.00, 0.00, 1.00 ),
                              ( 1.00, 0.30, 0.61 ) ] }
NCC_rain2 = { 'conLvls' : [-2, -0.001, 1, 10, 25, 100, 200, 400, 1000 ],
                'colours' : [ ( 0.85, 0.85, 0.85 ),
                              ( 1.00, 1.00, 1.00 ),
                              ( 1.00, 0.75, 0.35 ),
                              ( 1.00, 1.00, 0.00 ),
                              ( 0.30, 1.00, 0.00 ),
                              ( 0.00, 0.65, 1.00 ),
                              ( 0.70, 0.00, 1.00 ),
                              ( 1.00, 0.30, 0.61 ) ] }

NCC_rain_200a = { 'conLvls' : [-2, -0.001,1,2,4,7,10,15,20,40,70,100,150,200] ,
                'colours' : [ ( 0.85, 0.85, 0.85 ),
                              ( 1.00, 1.00, 1.00 ),
                              ( 1.00, 0.75, 0.35 ),
                              ( 1.00, 0.68, 0.00 ),
                              ( 1.00, 1.00, 0.00 ),
                              ( 0.70, 1.00, 0.00 ),
                              ( 0.30, 1.00, 0.00 ),
                              ( 0.00, 0.90, 0.60 ),
                              ( 0.00, 0.65, 1.00 ),
                              ( 0.25, 0.25, 1.00 ),
                              ( 0.70, 0.00, 1.00 ),
                              ( 1.00, 0.00, 1.00 ),
                              ( 1.00, 0.30, 0.61 ) ] }

NCC_rain_100 = { 'conLvls' : [-2, -0.001,0.2,0.4,1,2,4,7,10,15,20,40,70,100] ,
                'colours' : [ ( 0.85, 0.85, 0.85 ),
                              ( 1.00, 1.00, 1.00 ),
                              ( 1.00, 0.75, 0.35 ),
                              ( 1.00, 0.68, 0.00 ),
                              ( 1.00, 1.00, 0.00 ),
                              ( 0.70, 1.00, 0.00 ),
                              ( 0.30, 1.00, 0.00 ),
                              ( 0.00, 0.90, 0.60 ),
                              ( 0.00, 0.65, 1.00 ),
                              ( 0.25, 0.25, 1.00 ),
                              ( 0.70, 0.00, 1.00 ),
                              ( 1.00, 0.00, 1.00 ),
                              ( 1.00, 0.30, 0.61 ) ] }


NCC_rain_200 = { 'conLvls' : [-2, -0.001,1,5,10,15,25,50,100,150,200] ,
                'colours' : [ ( 0.85, 0.85, 0.85 ),
		              ( 1.00, 1.00, 1.00 ),
                              ( 1.00, 0.75, 0.35 ),
                              ( 1.00, 1.00, 0.00 ),
                              ( 0.70, 1.00, 0.00 ),
                              ( 0.00, 0.80, 0.50 ),
                              ( 0.00, 0.65, 1.00 ),
                              ( 0.25, 0.25, 1.00 ),
                              ( 0.70, 0.00, 1.00 ),
                              ( 1.00, 0.30, 0.61 ) ] }
NCC_heavy_rain = { 'conLvls' : [-2, -0.001, 10, 25, 50, 100, 150, 200] ,
                'colours' : [ ( 0.85, 0.85, 0.85 ),
                              ( 1.00, 1.00, 1.00 ),
                              ( 0.70, 1.00, 0.00 ),
                              ( 0.00, 0.65, 1.00 ),
                              ( 0.25, 0.25, 1.00 ),
                              ( 0.70, 0.00, 1.00 ),
                              ( 1.00, 0.30, 0.61 ) ] }
NCC_heavy_rain2 = { 'conLvls' : [-2.,-0.001, 5, 15, 30, 60, 90, 120] ,
                'colours' : [ ( 0.85, 0.85, 0.85 ),
                              ( 1.00, 1.00, 1.00 ),
                              ( 0.70, 1.00, 0.00 ),
                              ( 0.00, 0.65, 1.00 ),
                              ( 0.25, 0.25, 1.00 ),
                              ( 0.70, 0.00, 1.00 ),
                              ( 1.00, 0.30, 0.61 ) ] }

Rainval = { 'conLvls' : [-2., 0.001, 1., 2., 5., 10., 20., 50., 100., 150.,
                              200., 400., 600.] ,
                'colours' : [ ( 1.00,     1.00,      1.00 ),
                              ( 1.00,     235./255, 190./255),
                              ( 220./255, 1.00,     200./255),
                              ( 150./255, 1.00,     150./255),
                              ( 100./255, 1.00,     1.00),
                              ( 0.00,     200./255, 1.00),
                              ( 0.00,     100./255, 1.00),
                              ( 150./255, 100./255, 1.00),
                              ( 220./255, 100./255, 1.00),
                              ( 1.00,     0.00,     1.00),
                              ( 210./255, 160./255,  60./255),
                              (   1./255,   1./255,   1./255) ] }


ECMWF_cloud = { 'conLvls' : [x-0.5 for x in range(65)], 
                'colour_resol' : 4, 
                'colours' : [ hsl_to_rgb(0,0,1),
                              hsl_to_rgb(29,0.14,0.92),
                              hsl_to_rgb(29,0.29,0.83),
                              hsl_to_rgb(29,0.43,0.75),
                              hsl_to_rgb(300,0.08,0.92),
                              hsl_to_rgb(360,0.10,0.70),
                              hsl_to_rgb(13,0.3,0.75),
                              hsl_to_rgb(18,0.44,0.67),
                              hsl_to_rgb(300,0.16,0.83),
                              hsl_to_rgb(340,0.22,0.75),
                              hsl_to_rgb(360,0.20,0.70),
                              hsl_to_rgb(8,0.47,0.58),
                              hsl_to_rgb(300,0.24,0.75),
                              hsl_to_rgb(330,0.28,0.67),
                              hsl_to_rgb(349,0.38,0.80),
                              hsl_to_rgb(360,0.30,0.70),
                              hsl_to_rgb(180,0.17,0.92),
                              hsl_to_rgb(120,0.08,0.84),
                              hsl_to_rgb(57,0.17,0.75),
                              hsl_to_rgb(44,0.3,0.67),
                              hsl_to_rgb(209,0.14,0.84),
                              hsl_to_rgb(187,0,0.75),
                              hsl_to_rgb(29,0.15,0.67),
                              hsl_to_rgb(29,0.29,0.59),
                              hsl_to_rgb(239,0.16,0.75),
                              hsl_to_rgb(299,0.08,0.67),
                              hsl_to_rgb(360,0.10,0.60),
                              hsl_to_rgb(13,0.3,0.5),
                              hsl_to_rgb(258,0.21,0.67),
                              hsl_to_rgb(299,0.16,0.59),
                              hsl_to_rgb(341,0.10,0.70),
                              hsl_to_rgb(360,0.20,0.60),
                              hsl_to_rgb(180,0.34,0.83),
                              hsl_to_rgb(161,0.22,0.75),
                              hsl_to_rgb(120,0.16,0.67),
                              hsl_to_rgb(78,0.21,0.58),
                              hsl_to_rgb(193,0.3,0.75),
                              hsl_to_rgb(180,0.17,0.67),
                              hsl_to_rgb(120,0.08,0.58),
                              hsl_to_rgb(59,0.16,0.5),
                              hsl_to_rgb(209,0.29,0.67),
                              hsl_to_rgb(209,0.15,0.58),
                              hsl_to_rgb(217,0,0.5),
                              hsl_to_rgb(29,0.14,0.42),
                              hsl_to_rgb(224,0.3,0.58),
                              hsl_to_rgb(237,0.17,0.5),
                              hsl_to_rgb(299,0.08,0.42),
                              hsl_to_rgb(360,0.10,0.50),
                              hsl_to_rgb(180,0.5,0.75),
                              hsl_to_rgb(169,0.38,0.67),
                              hsl_to_rgb(150,0.28,0.58),
                              hsl_to_rgb(120,0.24,0.5),
                              hsl_to_rgb(188,0.47,0.67),
                              hsl_to_rgb(180,0.34,0.59),
                              hsl_to_rgb(160,0.22,0.5),
                              hsl_to_rgb(120,0.16,0.42),
                              hsl_to_rgb(198,0.44,0.58),
                              hsl_to_rgb(193,0.3,0.5),
                              hsl_to_rgb(180,0.17,0.42),
                              hsl_to_rgb(120,0.08,0.33),
                              hsl_to_rgb(209,0.43,0.5),
                              hsl_to_rgb(209,0.29,0.42),
                              hsl_to_rgb(209,0.14,0.33),
                              hsl_to_rgb(191,0,0.25) ]}

# Build up Linear Segmented Colour Map
nEC_col = len( ECMWF_cloud['colours'] )
nEC_div = nEC_col + 1.
rgbECm = ECMWF_cloud['colours'][0]

ECMWF_cloud_lsc={ 'red'  : [(0., rgbECm[0], rgbECm[0])],
                  'green': [(0., rgbECm[1], rgbECm[1])], 
                  'blue' : [(0., rgbECm[2], rgbECm[2])] }

for ic in range(nEC_col-1):
   rgbECm = ECMWF_cloud['colours'][ic]
   rgbECp = ECMWF_cloud['colours'][ic+1]
   ECMWF_cloud_lsc['red'  ].append( ( (ic+1.)/nEC_div, rgbECm[0], rgbECp[0]) )
   ECMWF_cloud_lsc['green'].append( ( (ic+1.)/nEC_div, rgbECm[1], rgbECp[1]) )
   ECMWF_cloud_lsc['blue' ].append( ( (ic+1.)/nEC_div, rgbECm[2], rgbECp[2]) )

ECMWF_cloud_lsc['red'  ].append( (1., rgbECp[0], rgbECp[0]) )
ECMWF_cloud_lsc['green'].append( (1., rgbECp[1], rgbECp[1]) )
ECMWF_cloud_lsc['blue' ].append( (1., rgbECp[2], rgbECp[2]) )

ECMWF_cloud_lsc['red'  ] = tuple( ECMWF_cloud_lsc['red'  ] )
ECMWF_cloud_lsc['green'] = tuple( ECMWF_cloud_lsc['green'] )
ECMWF_cloud_lsc['blue' ] = tuple( ECMWF_cloud_lsc['blue' ] )

stn_rain_lsc  = {'red': (
                         (0.000,  211./255, 211./255),
                         (0.0002, 0., 0.),
                         (0.010,  0., 0.),
                         (0.025,  124./255, 124./255),
                         (0.050,  218./255, 218./255),
                         (0.100,  1., 1.),
                         (1.000,  1., 1.)),
                 'green': (
                         (0.000,  211./255, 211./255),
                         (0.0002, 1., 1.),
                         (0.010,  0., 0.),
                         (0.025,  252./255, 252./255),
                         (0.050,  165./255, 165./255),
                         (0.100,  0., 0.),
                         (1.000,  0., 0.)),
                 'blue': (
                         (0.000,  211./255, 211./255),
                         (0.0002, 1., 1.),
                         (0.010,  1., 1.),
                         (0.025,  0., 0.),
                         (0.050,  32./255,  32./255),
                         (0.100,  0., 0.),
                         (1.000,  0., 0.))}

stn_rain = { 'conLvls' : [ -1, 0.2,10,25,50,100,1000] ,
                'colours' : [ ( 1.00, 1.00, 1.00 ),
                              ( 0.00, 1.00, 1.00 ),
                              ( 0.00, 0.00, 1.00 ),
                              ( 124./255, 252./255, 0.),
                              ( 218./255, 165./255, 32./255),
                              ( 1.00, 0.00, 0.00 ) ] }

step_lsc = {'red'  : ( (0.0, 1.0, 1.0),
                       (0.5, 1.0, 1.0),
                       (1.0, 1.0, 1.0) ),
            'green': ( (0.0, 0.0, 0.0),
                       (0.5, 0.0, 1.0),
                       (1.0, 1.0, 1.0) ),
            'blue' : ( (0.0, 0.0, 0.0),
                       (0.5, 0.0, 1.0),
                       (1.0, 1.0, 1.0) ) }

EC_obs_qual = {'red': (  (0.00, 0.47, 0.47),
                         (0.05, 0.47, 0.49),
                         (0.10, 0.49, 0.51),
                         (0.15, 0.51, 0.53),
                         (0.20, 0.53, 0.55),
                         (0.25, 0.55, 0.57),
                         (0.30, 0.57, 0.69),
                         (0.35, 0.69, 0.82),
                         (0.40, 0.82, 0.93),
                         (0.45, 0.93, 1.00),
                         (0.50, 1.00, 1.00),
                         (0.55, 1.00, 1.00),
                         (0.60, 1.00, 1.00),
                         (0.65, 1.00, 0.99),
                         (0.70, 0.99, 0.98),
                         (0.75, 0.98, 0.98),
                         (0.80, 0.98, 0.97),
                         (0.85, 0.97, 0.91),
                         (0.90, 0.91, 0.81),
                         (0.95, 0.81, 0.70),
                         (1.00, 0.70, 0.70) ),
                 'green': (
                         (0.00, 0.80, 0.80),
                         (0.05, 0.80, 0.95),
                         (0.10, 0.95, 1.00),
                         (0.15, 1.00, 1.00),
                         (0.20, 1.00, 1.00),
                         (0.25, 1.00, 1.00),
                         (0.30, 1.00, 1.00),
                         (0.35, 1.00, 1.00),
                         (0.40, 1.00, 1.00),
                         (0.45, 1.00, 0.97),
                         (0.50, 0.97, 0.89),
                         (0.55, 0.89, 0.82),
                         (0.60, 0.82, 0.75),
                         (0.65, 0.75, 0.67),
                         (0.70, 0.67, 0.58),
                         (0.75, 0.58, 0.47),
                         (0.80, 0.47, 0.36),
                         (0.85, 0.36, 0.26),
                         (0.90, 0.26, 0.19),
                         (0.95, 0.19, 0.13),
                         (1.00, 0.13, 0.13) ),
                 'blue': (
                         (0.00, 1.00, 1.00),
                         (0.05, 1.00, 1.00),
                         (0.10, 1.00, 1.00),
                         (0.15, 1.00, 0.92),
                         (0.20, 0.92, 0.80),
                         (0.25, 0.80, 0.68),
                         (0.30, 0.68, 0.58),
                         (0.35, 0.58, 0.59),
                         (0.40, 0.59, 0.61),
                         (0.45, 0.61, 0.63),
                         (0.50, 0.63, 0.65),
                         (0.55, 0.65, 0.67),
                         (0.60, 0.67, 0.57),
                         (0.65, 0.57, 0.47),
                         (0.70, 0.47, 0.37),
                         (0.75, 0.37, 0.27),
                         (0.80, 0.27, 0.17),
                         (0.85, 0.17, 0.07),
                         (0.90, 0.07, 0.03),
                         (0.95, 0.03, 0.03),
                         (1.00, 0.03, 0.03) )}
EC_obs_qual_map = col.LinearSegmentedColormap('EC_obs_qual', EC_obs_qual)
EC_obs_qual_map.set_under('blue')
EC_obs_qual_map.set_over('red')



Pal_List={ 'BlueGreyRed' : col.LinearSegmentedColormap('BlueGreyRed', BlueGreyRed),
           'NMOC_rain'   : col.LinearSegmentedColormap('NMOC_rain', NMOC_rain),
           'NCC_rain_lsc': col.LinearSegmentedColormap('NCC_rain_lsc', NCC_rain_lsc), 
           'stn_rain_lsc': col.LinearSegmentedColormap('stn_rain_lsc',stn_rain_lsc),
	   'ECMWF_cloud_lsc' : col.LinearSegmentedColormap('ECMWF_cloud_lsc',ECMWF_cloud_lsc),
	   'EC_obs_qual' : EC_obs_qual_map,
	   'stn_rain'    : stn_rain,
	   'step'        : step,
	   'step_lsc'    : col.LinearSegmentedColormap('step_lsc',step_lsc),
	   'NCCljr_rain' : NCCljr_rain,
	   'ECMWF_cloud' : ECMWF_cloud,
	   'ECMWF_rain'  : ECMWF_rain,
	   'ECMWF_rain0' : ECMWF_rain0,
	   'MO_rain'     : MO_rain,
	   'MO_rain64'   : MO_rain64,
	   'NCC_rain'    : NCC_rain,
	   'NCC_rain2'   : NCC_rain2,
	   'Rainval'     : Rainval,
	   'NCC_rain_200a'    : NCC_rain_200a,
	   'NCC_rain_100'     : NCC_rain_100,
	   'NCC_heavy_rain'   : NCC_heavy_rain,
	   'NCC_heavy_rain2'  : NCC_heavy_rain2,
	   'NCC_rain_200'     : NCC_rain_200 }

# Add the colormaps in matplotlib. 

maps = sorted(m for m in pyplt.cm.datad )

for m in maps:
    Pal_List['mpl_'+m] = pyplt.get_cmap(m)

brw_maps = sorted(iris.palette.CMAP_BREWER)

for m in brw_maps:
    Pal_List['brw_'+m] = mpl_cm.get_cmap(m)
    # set up a reverse map
    if m[-2:].isdigit():
       ndiv = int(m[-2:])
       rev_cmap = Pal_List['brw_'+m](list(range(ndiv))[-1::1])
       Pal_List['brw_'+m+'_r'] = col.ListedColormap(rev_cmap,m+'_r')
